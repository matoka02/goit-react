{"version":3,"file":"static/js/692.c76dc15e.chunk.js","mappings":"gLA4CA,IAzCa,SAAHA,GAAsD,IAAhDC,EAAID,EAAJC,KAAMC,EAAoBF,EAApBE,qBAAsBC,EAAYH,EAAZG,aACpCC,GAAWC,EAAAA,EAAAA,MAGjB,OACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kBAAiBC,UAC7BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,CACpBN,IACCI,EAAAA,EAAAA,KAAA,SACEC,UAAU,wBACVG,KAAK,WACLC,QAASV,EAAKW,UACdC,SAAU,kBAAMX,EAAqBD,EAAKa,GAAG,IAGhDZ,GACCI,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAIf,EAAKa,GAAIG,MAAOb,EAASI,SAChCP,EAAKiB,SAGRZ,EAAAA,EAAAA,KAAA,MAAAE,SAAKP,EAAKiB,YAIdZ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,SACjBL,IACCG,EAAAA,EAAAA,KAAA,UACEa,UAAWlB,EAAKW,UAChBL,UAAU,YACVG,KAAK,SACL,aAAW,QACXU,QAAS,kBAAMjB,EAAaF,EAAKa,GAAG,UAOlD,C,6FCLA,UA9BoB,WAClB,IAAMO,GAASC,EAAAA,EAAAA,MAIDC,GAAaC,EAAAA,EAAAA,KAAY,SAAAP,GAAK,OAAIA,EAAMhB,IAAI,IAAlDA,KAEFG,GAAWC,EAAAA,EAAAA,MAQjB,OAPAoB,QAAQC,IAAI,gBAAiBtB,IAQ3BE,EAAAA,EAAAA,KAAAqB,EAAAA,SAAA,CAAAnB,UACEC,EAAAA,EAAAA,MAACmB,EAAAA,SAAQ,CAAApB,SAAA,EAEPF,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAIZ,EAASa,MAAOV,UAAU,wBAAuBC,SAAC,SAGnD,OAARe,QAAQ,IAARA,OAAQ,EAARA,EAAUM,KACT,SAAA5B,GAAI,OAAIA,EAAKa,KAAOO,EAAOP,KAAMR,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAAe7B,KAAMA,GAAfA,EAAKa,GAAkB,QAK7E,C","sources":["components-08-016/ToDo.jsx","components-08-016/ToDoDetails.jsx"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst ToDo = ({ todo, handleCheckCompleted, handleDelete }) => {\n  const location = useLocation();\n  // console.log('location :>> ', location);\n\n  return (\n    <li className=\"list-group-item\">\n      <div className=\"row justify-content-between\">\n        <div className=\"col-10\">\n          {handleCheckCompleted && (\n            <input\n              className=\"form-check-input me-2\"\n              type=\"checkbox\"\n              checked={todo.completed}\n              onChange={() => handleCheckCompleted(todo.id)}\n            />\n          )}\n          {handleCheckCompleted ? (\n            <Link to={todo.id} state={location}>\n              {todo.title}\n            </Link>\n          ) : (\n            <h2>{todo.title}</h2>\n          )}\n        </div>\n\n        <div className=\"col\">\n          {handleDelete && (\n            <button\n              disabled={!todo.completed}\n              className=\"btn-close\"\n              type=\"button\"\n              aria-label=\"Close\"\n              onClick={() => handleDelete(todo.id)}\n            ></button>\n          )}\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default ToDo;\n","import { Suspense } from 'react';\n// import { useEffect, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport ToDo from './ToDo';\n\nconst ToDoDetails = () => {\n  const params = useParams();\n  // console.log('params :>> ', params);\n\n  // const [todoList, setTodoList] = useState(null);\n  const { todo: todoList } = useSelector(state => state.todo);\n\n  const location = useLocation();\n  console.log('location :>> ', location); // location :>>  {pathname: '/todo/FfrZEqRMLBZpnz3qYrrN3', search: '', hash: '', state: {â€¦}, key: 'pr6z2dde'}\n\n  // useEffect(() => {\n  //   const localTodo = localStorage.getItem('todo');\n  //   if (localTodo) setTodoList(JSON.parse(localTodo));\n  // }, []);\n\n  return (\n    <>\n      <Suspense>\n        {/* <Link to='/todo' className=\"btn btn-secondary m-2\">Back</Link> */}\n        <Link to={location.state} className=\"btn btn-secondary m-2\">\n          Back\n        </Link>\n        {todoList?.map(\n          todo => todo.id === params.id && <ToDo key={todo.id} todo={todo} />\n        )}\n      </Suspense>\n    </>\n  );\n};\n\nexport default ToDoDetails;\n"],"names":["_ref","todo","handleCheckCompleted","handleDelete","location","useLocation","_jsx","className","children","_jsxs","type","checked","completed","onChange","id","Link","to","state","title","disabled","onClick","params","useParams","todoList","useSelector","console","log","_Fragment","Suspense","map","ToDo"],"sourceRoot":""}