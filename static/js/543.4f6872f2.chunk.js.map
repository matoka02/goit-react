{"version":3,"file":"static/js/543.4f6872f2.chunk.js","mappings":"2KA4CA,IAzCa,SAAHA,GAAsD,IAAhDC,EAAID,EAAJC,KAAMC,EAAoBF,EAApBE,qBAAsBC,EAAYH,EAAZG,aACpCC,GAAWC,EAAAA,EAAAA,MAGjB,OACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kBAAiBC,UAC7BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,CACpBN,IACCI,EAAAA,EAAAA,KAAA,SACEC,UAAU,wBACVG,KAAK,WACLC,QAASV,EAAKW,UACdC,SAAU,kBAAMX,EAAqBD,EAAKa,GAAG,IAGhDZ,GACCI,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAIf,EAAKa,GAAIG,MAAOb,EAASI,SAChCP,EAAKiB,SAGRZ,EAAAA,EAAAA,KAAA,MAAAE,SAAKP,EAAKiB,YAIdZ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,SACjBL,IACCG,EAAAA,EAAAA,KAAA,UACEa,UAAWlB,EAAKW,UAChBL,UAAU,YACVG,KAAK,SACL,aAAW,QACXU,QAAS,kBAAMjB,EAAaF,EAAKa,GAAG,UAOlD,C,sFCPA,UA9BoB,WAClB,IAAMO,GAASC,EAAAA,EAAAA,MAGfC,GAAgCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAEtBrB,GAAWC,EAAAA,EAAAA,MAQjB,OAPAwB,QAAQC,IAAI,gBAAiB1B,IAE7B2B,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAYC,aAAaC,QAAQ,QACnCF,GAAWJ,EAAYO,KAAKC,MAAMJ,GACxC,GAAG,KAGD1B,EAAAA,EAAAA,KAAA+B,EAAAA,SAAA,CAAA7B,UACAC,EAAAA,EAAAA,MAAC6B,EAAAA,SAAQ,CAAA9B,SAAA,EAEPF,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CAACC,GAAIZ,EAASa,MAAOV,UAAU,wBAAuBC,SAAC,SAGnD,OAARmB,QAAQ,IAARA,OAAQ,EAARA,EAAUY,KACT,SAAAtC,GAAI,OAAIA,EAAKa,KAAOO,EAAOP,KAAMR,EAAAA,EAAAA,KAACkC,EAAAA,EAAI,CAAevC,KAAMA,GAAfA,EAAKa,GAAkB,QAM3E,C","sources":["components-06-012/ToDo.jsx","components-06-012/ToDoDetails.jsx"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst ToDo = ({ todo, handleCheckCompleted, handleDelete }) => {\n  const location = useLocation();\n  // console.log('location :>> ', location);\n\n  return (\n    <li className=\"list-group-item\">\n      <div className=\"row justify-content-between\">\n        <div className=\"col-10\">\n          {handleCheckCompleted && (\n            <input\n              className=\"form-check-input me-2\"\n              type=\"checkbox\"\n              checked={todo.completed}\n              onChange={() => handleCheckCompleted(todo.id)}\n            />\n          )}\n          {handleCheckCompleted ? (\n            <Link to={todo.id} state={location}>\n              {todo.title}\n            </Link>\n          ) : (\n            <h2>{todo.title}</h2>\n          )}\n        </div>\n\n        <div className=\"col\">\n          {handleDelete && (\n            <button\n              disabled={!todo.completed}\n              className=\"btn-close\"\n              type=\"button\"\n              aria-label=\"Close\"\n              onClick={() => handleDelete(todo.id)}\n            ></button>\n          )}\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default ToDo;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\n\nimport ToDo from './ToDo';\n\nconst ToDoDetails = () => {\n  const params = useParams();\n  // console.log('params :>> ', params);\n\n  const [todoList, setTodoList] = useState(null);\n\n  const location = useLocation();\n  console.log('location :>> ', location); // location :>>  {pathname: '/todo/FfrZEqRMLBZpnz3qYrrN3', search: '', hash: '', state: {â€¦}, key: 'pr6z2dde'}\n\n  useEffect(() => {\n    const localTodo = localStorage.getItem('todo');\n    if (localTodo) setTodoList(JSON.parse(localTodo));\n  }, []);\n\n  return (\n    <>\n    <Suspense>\n      {/* <Link to='/todo' className=\"btn btn-secondary m-2\">Back</Link> */}\n      <Link to={location.state} className=\"btn btn-secondary m-2\">\n        Back\n      </Link>\n      {todoList?.map(\n        todo => todo.id === params.id && <ToDo key={todo.id} todo={todo} />\n      )}\n    </Suspense>\n\n    </>\n  );\n};\n\nexport default ToDoDetails;\n"],"names":["_ref","todo","handleCheckCompleted","handleDelete","location","useLocation","_jsx","className","children","_jsxs","type","checked","completed","onChange","id","Link","to","state","title","disabled","onClick","params","useParams","_useState","useState","_useState2","_slicedToArray","todoList","setTodoList","console","log","useEffect","localTodo","localStorage","getItem","JSON","parse","_Fragment","Suspense","map","ToDo"],"sourceRoot":""}