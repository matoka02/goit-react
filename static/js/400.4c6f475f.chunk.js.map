{"version":3,"file":"static/js/400.4c6f475f.chunk.js","mappings":"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","sources":["components-06-012/ToDo.jsx","components-06-012/FormToDo.jsx","components-06-012/FormFilterTodo.jsx","components-06-012/ToDoList.jsx","components-06-012/pages/TodoPage.jsx"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst ToDo = ({ todo, handleCheckCompleted, handleDelete }) => {\n  const location = useLocation();\n  // console.log('location :>> ', location);\n\n  return (\n    <li className=\"list-group-item\">\n      <div className=\"row justify-content-between\">\n        <div className=\"col-10\">\n          {handleCheckCompleted && (\n            <input\n              className=\"form-check-input me-2\"\n              type=\"checkbox\"\n              checked={todo.completed}\n              onChange={() => handleCheckCompleted(todo.id)}\n            />\n          )}\n          {handleCheckCompleted ? (\n            <Link to={todo.id} state={location}>\n              {todo.title}\n            </Link>\n          ) : (\n            <h2>{todo.title}</h2>\n          )}\n        </div>\n\n        <div className=\"col\">\n          {handleDelete && (\n            <button\n              disabled={!todo.completed}\n              className=\"btn-close\"\n              type=\"button\"\n              aria-label=\"Close\"\n              onClick={() => handleDelete(todo.id)}\n            ></button>\n          )}\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default ToDo;\n","import React from 'react';\nimport { Component } from 'react';\n\nclass FormToDo extends Component {\n  state = {\n    todo: '',\n  };\n\n  handleChange = ({ target }) => {\n    this.setState({\n      // [имя ключа]: значение, откуда забирать\n      [target.name]: target.value,\n    });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n\n    this.props.addToDo(this.state.todo);\n\n    this.setState({\n      todo: '',\n    });\n  };  \n\n  render(){\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"mb-3\">\n          <label \n          htmlFor=\"exampleInput\" \n          className=\"form-label\">\n            Create to-do\n          </label>\n          <input\n            name=\"todo\"\n            type=\"text\"\n            className=\"form-control\"\n            id=\"exampleInput\"\n            onChange={this.handleChange}\n            value={this.state.todo}\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary\"\n        >\n          Add to-do\n        </button>\n      </form>      \n    )\n    \n  };\n};\n\nexport default FormToDo;","// import { useState } from \"react\";\n\nconst FormFilterToDo = ({setSearchParams}) => {\n  // const [filter, setFilter] = useState('');\n\n  const handleChange = ({ target }) => {\n    // setFilter(target.value);\n    setSearchParams({filter: target.value});\n  };\n\n  // const [searchParams, setSearchParams] = useSearchParams();\n  // console.log(params);\n\n  return (\n    <form>\n      <div className=\"mb-3\">\n        <label htmlFor=\"exampleInput\" className=\"form-label\">\n          Filter:\n        </label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"exampleInput\"\n          onChange={handleChange}\n          // value={this.state.todo}\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default FormFilterToDo;\n","import React from 'react';\n// import { Component} from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { useSearchParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// import todo from 'assets/data-03-005.json';\n// import { nanoid } from 'nanoid';\n\nimport ToDo from './ToDo';\nimport FormToDo from './FormToDo';\nimport FormFilterToDo from './FormFilterTodo';\nimport { createTodo } from './store/todo/action';\n\nconst ToDoList = () => {\n  // const [todoList, setTodoList] = useState('');\n  const { todo: todoList } = useSelector(state => state.todo);\n  const dispatch = useDispatch();\n\n  const [filterTodoList, setFilterTodoList] = useState(todoList);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  // console.log(searchParams.get('filter'));\n  // console.log(searchParams.getAll('filter'));       // ['hhhhhhhhhhh']\n  // console.log(...searchParams);                     // (2) ['filter', 'hhhhhhhhhhh']\n  // console.log(Object.fromEntries([...searchParams]));    // {filter: 'hhhhhhhhhhh'}\n\n  // добавление '', чтобы при незаполненном поле фильтра был рендер всех элементов списка\n  const filterText = searchParams.get('filter') ?? '';\n\n\n  // useEffect(() => {\n  //   const localTodo = localStorage.getItem('todo');\n  //   if (localTodo) {\n  //     setTodoList(JSON.parse(localTodo));\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   todoList && localStorage.setItem('todo', JSON.stringify(todoList));\n  // }, [todoList]);\n\n  useEffect(() => {\n    todoList &&\n      setFilterTodoList(\n        todoList.filter(todo =>\n          todo.title.toLowerCase().includes(filterText.trim().toLowerCase())\n        )\n      );\n  }, [filterText, searchParams, todoList]);\n\n  // const handleCheckCompleted = id => {\n    // setTodoList(prevTodoList => {\n    //   return prevTodoList.map(todo =>\n    //     todo.id === id ? { ...todo, completed: !todo.completed } : todo\n    //   );\n    // });\n  // };\n\n  // const handleDelete = id => {\n    // setTodoList(prevTodoList => {\n    //   return prevTodoList.filter(todo => todo.id !== id);\n    // });\n\n    // toast.error('Delete successfully');\n  // };\n\n  const addToDo = value => {\n    // setTodoList(prevTodoList => {\n    //   return [\n    //     ...prevTodoList,\n    //     { id: nanoid(), title: value, completed: false },\n    //   ];\n    // });\n\n    dispatch(createTodo(value));\n    // createTodo(value);\n\n    toast.success('Create successfully');\n  };\n\n  return (\n    <>\n      <h1>My To-Do list</h1>\n      <FormFilterToDo\n        setSearchParams={setSearchParams}\n        filterText={filterText}\n      />\n      <FormToDo addToDo={addToDo}></FormToDo>\n      {filterTodoList && (\n        <ul className=\"list-group list-group-flush\">\n          {filterTodoList.map(todo => (\n            <ToDo\n              key={todo.id}\n              todo={todo}\n              // handleCheckCompleted={handleCheckCompleted}\n              // handleDelete={handleDelete}\n            />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default ToDoList;\n","import ToDoList from \"components-06-012/ToDoList\";\n\nconst TodoPage = () => {\n  return (\n    <>\n      <ToDoList />\n    </>\n  );\n};\n\nexport default TodoPage;\n"],"names":["_ref","todo","handleCheckCompleted","handleDelete","location","useLocation","_jsx","className","children","_jsxs","type","checked","completed","onChange","id","Link","to","state","title","disabled","onClick","FormToDo","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","handleChange","target","setState","_defineProperty","name","value","handleSubmit","evt","preventDefault","props","addToDo","_createClass","key","onSubmit","this","htmlFor","Component","setSearchParams","_ref2","filter","_searchParams$get","todoList","useSelector","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","filterTodoList","setFilterTodoList","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","filterText","get","useEffect","toLowerCase","includes","trim","_Fragment","FormFilterToDo","createTodo","toast","map","ToDo","ToDoList"],"sourceRoot":""}